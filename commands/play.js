module.exports.permissionRequired = 0

const ytdl = require("ytdl-core"), ytpl = require("ytpl"), ytsr = require("ytsr"), { Util } = require("discord.js");

module.exports.run = async (client, message, args, config, queue) => {
  const voiceChannel = message.member.voice.channel;
  if (!voiceChannel) return message.channel.send("‚ùå –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ –Ω–µ–º—É!")

  const permissions = voiceChannel.permissionsFor(message.guild.me)
  if (!permissions.has("CONNECT")) return message.channel.send("‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
  if (!permissions.has("SPEAK")) return message.channel.send("‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≥–æ–≤–æ—Ä–∏—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")

  if (!args.length) return message.channel.send("‚ùå –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ –∏–ª–∏ –¥–∞—Ç—å –º–Ω–µ URL!")

  const url = args.join(" ")
  if (url.includes("list=")) {
    const playlist = await ytpl(url.split("list=")[1])
    const videos = playlist.items;

    message.channel.send(`‚úÖ –ü–ª–µ–π–ª–∏—Å—Ç **${playlist.title}** (${videos.length}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å!`)

    for (const video of videos) await queueSong(video, message, voiceChannel, queue)
  } else {
    let video;
    try {
      video = await ytdl.getBasicInfo(url)
    } catch(e) {
      try {
        const filters = await ytsr.getFilters("NoCopyrightMusic");
        const results = await ytsr(url, { limit: 10 })
        console.log(results);
        const videos = results.items
        let index = 0;

        if (!videos.length) return message.channel.send("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

        await message.channel.send([
          "__**–í—ã–±–æ—Ä –ø–µ—Å–Ω–∏:**__",
          videos.map(v => `${++index} - **${v.title}**`).join("\n"),
          `**–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –ø–µ—Å–Ω—é, –æ—Ç–ø—Ä–∞–≤–∏–≤ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ ${videos.length} –≤ —á–∞—Ç.**`
        ].join("\n\n"))

        let response;
        try {
          response = await message.channel.awaitMessages(msg => 0 < parseInt(msg.content) && parseInt(msg.content) < videos.length + 1 && msg.author.id == message.author.id, {
            max: 1,
            time: 30000,
            errors: ['time']
          });
        } catch(e) {
          return message.channel.send("‚ùå –ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –≤–∏–¥–µ–æ.")
        }
        const videoIndex = parseInt(response.first().content);
        console.log(video);
        video = await ytdl.getBasicInfo(videos[videoIndex - 1].url.split("?v=")[1]);
        console.log(video);
        console.log(videoIndex);
      } catch(e) {
        console.log(e)
        return message.channel.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.")
      }
    }
    
    await message.channel.send(`‚úÖ –ü–µ—Å–Ω—è **${video.videoDetails.title}** –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å!`)
    return await queueSong(video, message, voiceChannel, queue)
  }
}

async function queueSong(video, message, voiceChannel, queue) {
  const serverQueue = queue.get(message.guild.id)

  const song = {
    id: video.videoDetails.videoId,
    title: Util.escapeMarkdown(video.videoDetails.title),
    url: video.videoDetails.video_url
  }

  if (!serverQueue) {
    const queueConstruct = {
      textChannel: message.channel,
      voiceChannel,
      connection: null,
      songs: [song],
      volume: 50,
      playing: true
    }

    try {
      const connection = await voiceChannel.join();
      queueConstruct.connection = connection;
      queue.set(message.guild.id, queueConstruct)
      playSong(message.guild, queue, queueConstruct.songs[0])
    } catch(e) {
      console.log(e)
      message.channel.send("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
      return queue.delete(message.guild.id)
    }
  } else serverQueue.songs.push(song);

  return;
}

async function playSong(guild, queue, song) {
  const serverQueue = queue.get(guild.id);

  if (!song) {
    serverQueue.voiceChannel.leave();
    queue.delete(guild.id);
    return;
  }

  serverQueue.connection.play(ytdl(song.id), { bitrate: 'auto' })
    .on("speaking", speaking => {
      if (!speaking) {
        serverQueue.songs.shift();
        playSong(guild, queue, serverQueue.songs[0])
      }
    })
    .on("error", console.error)
    .setVolumeLogarithmic(serverQueue.volume / 250)
  
  serverQueue.textChannel.send(`üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç **${song.title}**`)
}

module.exports.help = {
  name: "play",
  description: "–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∑–≤—É–∫",
  usage: "play <—Å—Å—ã–ª–∫–∞ –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ>",
};
